CXX			:= clang
LD	 		:= ld.lld
LLDEnzyme 	:= /usr/local/lib/Enzyme/LLDEnzyme-15.so

CXXFLAGS 	+= -flto -fuse-ld=$(LD) 
EnzymeNoOpt := -fno-vectorize -fno-slp-vectorize -fno-unroll-loops
LLDFLAGS    += -Wl,--no-lto-legacy-pass-manager,--load-pass-plugin=$(LLDEnzyme),--lto-newpm-passes=enzyme
#LLDFLAGS	+= -Wl,--mllvm=--load=$(LLDEnzyme)


app: main.o primal.o adjoint.o
	@echo "\nCompiling done. Now linking, and AD\n"
	$(CXX) -O3 $(CXXFLAGS) $(LLDFLAGS) -o app main.o primal.o adjoint.o

main.o: main.cpp
	$(CXX) $(CXXFLAGS) -O2 $(EnzymeNoOpt) -c main.cpp

primal.o: primal.cpp
	$(CXX) $(CXXFLAGS) -O2 $(EnzymeNoOpt) -c primal.cpp

adjoint.o: adjoint.cpp
	$(CXX) $(CXXFLAGS) -O2 $(EnzymeNoOpt) -c adjoint.cpp

clean:
	rm -f main main.o square primal.o dsquare adjoint.o app*